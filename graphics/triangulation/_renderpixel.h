__device__ struct renderpixel_result{ float o[3]; };
__device__ renderpixel_result renderpixel (float tx1_4 = 2.0,float ty1_7 = 2.0,float tx2_5 = 2.0,float ty2_8 = 2.0,float tx3_6 = 2.0,float ty3_9 = 2.0,float px0_10 = 2.0,float px1_11 = 2.0,float py0_12 = 2.0,float py1_13 = 2.0,float tc0_14 = 0.0,float tc1_15 = 0.0,float tc2_16 = 0.0){
float _l_19;
float _t_52[3] = {0,0,0};
int _t_50;
_l_19 = 4.0;
for(_t_50 = 0;_t_50 < _l_19;_t_50++){float _t_51;
float y_18;
float _l_18;
float _t_48[3] = {0,0,0};
int _t_46;
float _t_53[3];
_t_51 = (py1_13 - py0_12) / (_l_19);
y_18 = py0_12 + _t_51 * (_t_50 + 0.5f);
_l_18 = 4.0;
for(_t_46 = 0;_t_46 < _l_18;_t_46++){float _t_47;
float x_17;
float _t_0[3];
float _t_1;
float _t_2;
float _l_0;
float _t_3;
float _t_4;
float _l_1;
float _t_5;
float _t_6;
float _t_7;
float _t_8;
float _l_2;
float _t_9;
float _t_10;
float _t_11;
float _t_12;
float _l_3;
bool _t_13;
float _t_14;
float _t_15;
float _t_16;
float _l_6;
float _t_17;
float _t_18;
float _l_7;
float _t_19;
float _t_20;
float _t_21;
float _t_22;
float _l_8;
float _t_23;
float _t_24;
float _t_25;
float _t_26;
float _l_9;
bool _t_27;
float _t_28;
float _t_29;
float _t_30;
float _t_31;
float _l_12;
float _t_32;
float _t_33;
float _l_13;
float _t_34;
float _t_35;
float _t_36;
float _t_37;
float _l_14;
float _t_38;
float _t_39;
float _t_40;
float _t_41;
float _l_15;
bool _t_42;
float _t_43;
float _t_44;
float _t_45[3];
float _t_49[3];
_t_47 = (px1_11 - px0_10) / (_l_18);
x_17 = px0_10 + _t_47 * (_t_46 + 0.5f);
_t_0[0] = tc0_14;
_t_0[1] = tc1_15;
_t_0[2] = tc2_16;

_t_1 = tx1_4 * ty2_8;
_t_2 = tx2_5 * ty1_7;
_l_0 = -1.0;
_t_3 = _t_2 * _l_0;
_t_4 = _t_1 + _t_3;
_l_1 = -1.0;
_t_5 = _l_1 * ty2_8;
_t_6 = ty1_7 + _t_5;
_t_7 = _t_6 * x_17;
_t_8 = _t_4 + _t_7;
_l_2 = -1.0;
_t_9 = _l_2 * tx1_4;
_t_10 = tx2_5 + _t_9;
_t_11 = _t_10 * y_18;
_t_12 = _t_8 + _t_11;
_l_3 = 0.0;
_t_13 = _t_12 < _l_3;
if (_t_13)
{float _l_4;
_l_4 = 1.0;
_t_14 = _l_4;
}                 else 
{float _l_5;
_l_5 = 0.0;
_t_14 = _l_5;
}
_t_15 = tx2_5 * ty3_9;
_t_16 = tx3_6 * ty2_8;
_l_6 = -1.0;
_t_17 = _t_16 * _l_6;
_t_18 = _t_15 + _t_17;
_l_7 = -1.0;
_t_19 = _l_7 * ty3_9;
_t_20 = ty2_8 + _t_19;
_t_21 = _t_20 * x_17;
_t_22 = _t_18 + _t_21;
_l_8 = -1.0;
_t_23 = _l_8 * tx2_5;
_t_24 = tx3_6 + _t_23;
_t_25 = _t_24 * y_18;
_t_26 = _t_22 + _t_25;
_l_9 = 0.0;
_t_27 = _t_26 < _l_9;
if (_t_27)
{float _l_10;
_l_10 = 1.0;
_t_28 = _l_10;
}                 else 
{float _l_11;
_l_11 = 0.0;
_t_28 = _l_11;
}
_t_29 = _t_14 * _t_28;
_t_30 = tx3_6 * ty1_7;
_t_31 = tx1_4 * ty3_9;
_l_12 = -1.0;
_t_32 = _t_31 * _l_12;
_t_33 = _t_30 + _t_32;
_l_13 = -1.0;
_t_34 = _l_13 * ty1_7;
_t_35 = ty3_9 + _t_34;
_t_36 = _t_35 * x_17;
_t_37 = _t_33 + _t_36;
_l_14 = -1.0;
_t_38 = _l_14 * tx3_6;
_t_39 = tx1_4 + _t_38;
_t_40 = _t_39 * y_18;
_t_41 = _t_37 + _t_40;
_l_15 = 0.0;
_t_42 = _t_41 < _l_15;
if (_t_42)
{float _l_16;
_l_16 = 1.0;
_t_43 = _l_16;
}                 else 
{float _l_17;
_l_17 = 0.0;
_t_43 = _l_17;
}
_t_44 = _t_29 * _t_43;
for (uint32_t _iter_ = 0; _iter_ < 3; _iter_++) _t_45[_iter_] = _t_0[_iter_] * _t_44;
for (uint32_t _iter_ = 0; _iter_ < 3; _iter_++) _t_49[_iter_] = _t_47 * _t_45[_iter_];
for (uint32_t _iter_ = 0; _iter_ < 3; _iter_++) _t_48[_iter_] += _t_49[_iter_];
}
for (uint32_t _iter_ = 0; _iter_ < 3; _iter_++) _t_53[_iter_] = _t_51 * _t_48[_iter_];
for (uint32_t _iter_ = 0; _iter_ < 3; _iter_++) _t_52[_iter_] += _t_53[_iter_];
}
return renderpixel_result{ { _t_52[0],_t_52[1],_t_52[2] } };}